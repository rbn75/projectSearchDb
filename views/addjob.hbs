
{{!-- testing crud --}}

<div class="container add-job-wrapper">
    <br>
    <h2>ADD JOBS IN HERE</h2>


    {{!-- <a href="guest">My Account</a> --}}
    <div class="form-wrapper">
        <div class="form-hero">
            <form name="add-form" action="javascript:void(0);" method="POST" onsubmit="app.Add()">
                <label for="name">Job Description</label>
                <input type="text" id="add-name" class="form-control" placeholder="job description">
                <br>
                <input type="submit" value="Add" class="btn btn-primary btn-lg">
            </form>


            <div id="spoiler" role="aria-hidden">
                <form action="javascript:void(0);" method="POST" id="saveEdit">
                    <label for="job">Job modified</label>
                    <input type="text" id="edit-name" class="form-control">
                    <br>
                    <input type="submit" class="btn btn-primary btn-lg" value="Edit" /> <a onclick="CloseInput()"
                        aria-label="Close">&#10006;</a>
                </form>
            </div>

            <p id="counter"></p>

            <table>
                <tr>
                    <th>Name</th>
                </tr>
                <tbody id="jobs">
                </tbody>
            </table>


        </div>




    </div>


</div>












<script>
    var app = new function () {

        this.el = document.getElementById('jobs');

        this.jobs = ['DEVELOPER CHINA', 'FULL STACK DEVELOPER'];

        this.Count = function (data) {
            var el = document.getElementById('counter');
            var name = 'jobs';

            if (data) {
                if (data > 1) {
                    name = 'jobs';
                }
                el.innerHTML = data + ' ' + name;
            } else {
                el.innerHTML = 'No ' + name;
            }
        };

        this.FetchAll = function () {
            var data = '';

            if (this.jobs.length > 0) {
                for (i = 0; i < this.jobs.length; i++) {
                    data += '<tr>';
                    data += '<td>' + this.jobs[i] + '</td>';
                    data += '<td><button class="btn btn-primary btn-lg" onclick="app.Edit(' + i + ')">Edit</button></td>';
                    data += '<td><button class="btn btn-primary btn-lg" onclick="app.Delete(' + i + ')">Delete</button></td>';
                    data += '</tr>';
                }
            }

            this.Count(this.jobs.length);
            return this.el.innerHTML = data;
        };

        this.Add = function () {
            el = document.getElementById('add-name');
            
            var jobs = el.value;

            if (jobs) {
              
                this.jobs.push(jobs.trim());
                // Reset input value
                el.value = '';
                // Dislay the new list
                this.FetchAll();
            }
        };

        this.Edit = function (item) {
            var el = document.getElementById('edit-name');
            // Display value in the field
            el.value = this.jobs[item];
            // Display fields
            document.getElementById('spoiler').style.display = 'block';
            self = this;

            document.getElementById('saveEdit').onsubmit = function () {
                // Get value
                var jobs = el.value;

                if (jobs) {
                    // Edit value
                    self.jobs.splice(item, 1, jobs.trim());
                    // Display the new list
                    self.FetchAll();
                    // Hide fields
                    CloseInput();
                }
            }
        };

        this.Delete = function (item) {
            // Delete the current row
            this.jobs.splice(item, 1);
            // Display the new list
            this.FetchAll();
        };

    }

    app.FetchAll();

    function CloseInput() {
        document.getElementById('spoiler').style.display = 'none';
    }
</script>